{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","c","id","payload","map","contact","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","style","cursor","onClick","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","About","match","params","NotFound","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","put","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","NotFount","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8877e64f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(c => c.id !== action.payload)\r\n            };\r\n            case 'ADD_CONTACT':\r\n              return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n              }\r\n            case 'UPDATE_CONTACT':\r\n              return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\r\n              }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: 1, name: \"John Doe\", email: \"email\", phone: \"123\" },\r\n      // { id: 2, name: \"Karen Williams\", email: \"email\", phone: \"123\" },\r\n      // { id: 3, name: \"Henry Johnson\", email: \"email\", phone: \"123\" }\r\n    ],\r\n    dispatch: action => {\r\n        this.setState(state => reducer(state, action))\r\n    }\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   axios.get('https://jsonplaceholder.typicode.com/users')\r\n  //   .then(response => this.setState({\r\n  //     contacts: response.data\r\n  //   }));\r\n  // }\r\n\r\n  async componentDidMount(){\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n    </Context.Provider>;\r\n  }\r\n\r\n}\r\n \r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    }catch(e){}\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt\" style={{\r\n                    cursor: 'pointer', \r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'}}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home <i className=\"fas fa-home\"></i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                Add <i className=\"fas fa-plus\"></i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About <i className=\"fas fa-question\"></i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n            <div>{props.match.params.id}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page not found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context.js';\r\n// import uuid from 'uuid';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = { \r\n      // id: uuid(), \r\n      name, \r\n      email, \r\n      phone };\r\n\r\n    // axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n    // .then(res => dispatch({ type: 'ADD_CONTACT', payload: res.data }));\r\n    const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    \r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context.js\";\r\n// import uuid from 'uuid';\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }))\r\n    }\r\n\r\n    // componentWillMount(){\r\n    //     console.log('console will mount');\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('component updated');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('component updated');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null;\r\n    // }\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFount from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from './components/contacts/EditContact';\nimport Test from './components/test/Test';\nimport { Provider } from \"./context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact manager\" />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about/:id?\" component={About}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFount}/>\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}